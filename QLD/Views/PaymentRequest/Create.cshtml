@model CTGroup.BO.Data.PaymentRequestExtension
@using System.Activities.Expressions
@using CTGroup.BO.Data
@using CTGroup.BO.Web.Common
@{
    ViewBag.Title = "Đề nghị thanh toán";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/plugin/iCheck/custom.css" rel="stylesheet" />
<link href="~/Content/chosen.css" rel="stylesheet" />
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Quản lý thanh toán", "Index")
            </li>
            <li class="active">
                <strong>Tạo mới</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @using (Ajax.BeginForm("Create", "PaymentRequest", null, new AjaxCommonOption() { HttpMethod = "POST", OnSuccess = "PaymentRequestSuccess" }, new { role = "form", id = "MainForm", enctype = "multipart/form-data" }))
                    {
                        <div class="row">
                            <div class="col-lg-12">
                               
                                    <a class="btn btn-primary" onclick="beginSubmit()">Lưu</a>
                              
                                <button type="submit" hidden="" id="submit"></button>
                                @Html.ActionLink("Hủy", "Index", null, htmlAttributes: new { @class = "btn btn-default", role = "button" })
                            </div>
                        </div>

                        <div class="form-horizontal">
                            <div class="col-lg-12">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Cty thành viên <span style="color: Red">(*)</span></label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.FromCompany, null, "------", new { @class = "chosen-select", @required = "" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Loại <span style="color: Red">(*)</span></label>
                                            <div class="col-md-8" style="margin-bottom: -18px">
                                                @Html.DropDownListFor(x => x.Type, null, "------", new { @class = "form-control", @required = "" })

                                            </div>
                                        </div>
                                    </div>

                                </div>



                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Số tiền <span style="color: Red">(*)</span></label>
                                            <div class="col-md-8" style="margin-bottom: -18px">
                                                @Html.TextBoxFor(x => x.Amount, new { @class = "form-control", @required = "" })

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Nội dung</label>
                                            <div class="col-md-8">
                                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })

                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Hình thức TT</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.PaymentMethod, null, "-----", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Ngày đề nghị TT</label>
                                            <div class="col-md-8">
                                                <div class="input-group date">
                                                    <input type="text" name="DatePaid" class="form-control" data_val="false">
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-horizontal" id="transfer">
                                    <div class="col-lg-12">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Ngân hàng</label>
                                                <div class="col-md-8">
                                                    @Html.DropDownList("BankID", null, "------", new { @class = "form-control", @id = "Bank" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Chi nhánh</label>
                                                <div class="col-md-8">
                                                    @Html.DropDownListFor(x => x.BranchID, null, "-------", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Số tài khoản</label>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(x => x.BankAccount, new { @class = "form-control " })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Chủ tài khoản</label>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(x => x.BankAccountName, new { @class = "form-control " })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Khách hàng</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.CustomerID, null, "------", new { @class = "form-control chosen-select" })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Khách hàng mới</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control " })
                                        </div>
                                    </div>
                                </div>
                               

                            </div>


                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Hợp đồng</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.ContractID, null, "------", new { @class = "form-control select2" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">File chứng từ</label>
                                        <div class="col-md-8">
                                            <input id="fileupload" type="file" name="FileAttach" multiple="multiple">
                                        </div>

                                    </div>
                                </div>
                                
                            </div>


                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">NV xem xét <span style="color: Red">(*)</span></label>
                                        <div class="col-md-8">
                                            @Html.DropDownList("Users", null, new { @class = "form-control chosen-select", multiple = "multiple", @required = "" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Người đề nghị</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.FromUser, null, new {@class = "chosen-select"})
                                        </div>
                                    </div>
                                </div>
                            </div>

                                @*<div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Trạng thái</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.Status, null, "-----",new { @class = "form-control", @required = "" })
                                            </div>
                                        </div>
                                    </div>*@
                                @*<div class="col-md-6">
                                        <div class="form-group">

                                            <label class="col-md-4 control-label">Người duyệt</label>
                                            <div class="col-md-8">
                                                @Html.DropDownList("ApproveID", null, "----", new { @class = "form-control", @id = "ApproveID" })
                                                <label id="errorApproveID" hidden="" style="color: red">Thông tin bắt buộc !!!</label>
                                            </div>
                                        </div>
                                    </div>*@

                                @*<div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Trạng thái</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.Status, null, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>*@

                            @*<div id="ProjectProduct" hidden="">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Dự án</label>
                                        <div class="col-md-8">
                                            @Html.DropDownList("Project", null, "------", new { @class = "form-control", @id = "Project" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Căn hộ</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.ProductID, null, "------", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                            <div class="col-md-12">
                                <hr/>
                            </div>
                                
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Hồ sơ đính kèm</label>

                                    <div class="col-sm-10">
                                        <div class="col-sm-9" style="margin-right: -45px">
                                            <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" name="HaveContract"> Hợp đồng </label>
                                            <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" name="HaveBill"> Hóa đơn </label>
                                            <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" name="HaveBBNT"> Biên bản nghiệm thu </label>
                                            <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" name="HaveNXK"> Phiếu nhập xuất kho </label>
                                            <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" id="HaveNoteCheck"> Khác </label>
                                        </div>                                  
                                        <div class="col-sm-3">
                                            @Html.TextBox("HaveNote", "", new {@id = "HaveNote", @class = "form-control",@style="width: 220px", @placeholder = "Nhập khác", @disabled = ""})
                                        </div>
                                    </div>
                                </div>  
                            </div >
            

                            </div>
                        </div>




                        <div class="row">
                            <div class="col-lg-12">
                               
                                    <a class="btn btn-primary" onclick="beginSubmit()">Lưu</a>
                                
                                <button type="submit" hidden="" id="submit"></button>
                                @Html.ActionLink("Hủy", "Index", null, htmlAttributes: new { @class = "btn btn-default", role = "button"  })

                            </div>
                        </div>
                       

                       
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
<script src="~/Scripts/chosen.jquery.js"></script>
<script>
    $('#HaveNoteCheck').on('ifChecked', function () {
            $('#HaveNote').removeAttr('disabled')
    })

    $('#HaveNoteCheck').on('ifUnchecked', function () {

            $('#HaveNote').prop('disabled', 'disabled')
        
    })

    $().ready(function () {
        

        

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('.input-group.date').datetimepicker({
            locale: 'vi',
            format: 'DD/MM/YYYY',
            defaultDate: null,
        });

        $('#transfer').hide()
        $('#Amount').autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });
        $(function () {
            $('.chosen-select').chosen();
        });
        @*$('#Project').on('change',
            function () {
                $('#ProductID').find("option[value\!='']").remove();
                if ($(this).val() !== '')

                    $.post('@Url.Action("GetProductByProjectId")',
                        { projectId: $(this).val() },
                        function (data) {
                            $.each(data,
                                function (key, value) {
                                    $('#ProductID').append($('<option></option>').val(value.ID).html(value.Text));
                                });
                        });
            })*@



        $('#CustomerID').on('change',function() {
            $.post('@Url.Action("GetContractByCustomer")', { customerId: $(this).val() }, function (result) {
                $('#ContractID').find("option[value\!='']").remove();

                $.each(result.contract,
                    function (key, value) {
                        $('#ContractID').append($('<option></option>').val(value.ID).html(value.Text));
                    });


            })
        })

        $('#ContractID').on('change',
            function () {
                $.post('@Url.Action("GetContract")', { contractID: $(this).val() }, function (result) {
                    
                    if ($('#Type').val() == '@((int)PaymentRequestType.PhieuDeNghiThuKH)') {

                        $('#ProductID').find("option[value\!='']").remove();
                        //$('#ProductID').find("option[value\!='------']").remove();
                        //$('#CustomerID').find("option[value\!='']").remove();
                        //$('#CustomerID').find("option[value\!='------']").remove();
                        $('#Project').find("option[value\!='']").remove();
                        //$('#Project').find("option[value\!='------']").remove();
                        if ($('#ContractID').val() !== '')

                            $.post('@Url.Action("GetProductByCustomerContract")',
                                { productID: result.product },
                                function (data) {
                                    $.each(data,
                                        function (key, value) {
                                            $('#ProductID').append($('<option></option>').val(value.ID).html(value.Text));
                                        });
                                });

                        @*$.post('@Url.Action("GetCustomerByCustomerContract")',
                        { customerID: result.customer },
                        function (data) {
                            $.each(data,
                                function (key, value) {
                                    $('#CustomerID').append($('<option></option>').val(value.ID).html(value.Text));
                                });
                        });*@

                        $.post('@Url.Action("GetProjectByCustomerContract")',
                            { projectID: result.project },
                            function (data) {
                                $.each(data,
                                    function (key, value) {
                                        $('#Project').append($('<option></option>').val(value.ID).html(value.Text));
                                    });
                            });

                    }

                    
                })

            })

        $('#Type').on('change',
            function () {
                var value = $('#Type').val()
                if (value == '@((int)PaymentRequestType.PhieuDeNghiThuKH)') {
                    $('#ProjectProduct').show()
                } else {
                    $('#ProjectProduct').hide()
                    $('#Project').val('')
                    $('#ProductID').val('')
                }

                $('#ApproveID').find("option[value\!='']").remove();
                if ($(this).val() !== '')

                    $.post('@Url.Action("GetApproveByType")',
                        { p: $(this).val() },
                        function (data) {
                            $.each(data,
                                function (key, value) {

                                    $('#ApproveID').append($('<option></option>').val(value.Value).html(value.Text).prop('selected', ''));
                                });
                        });
            })

        $('#Bank').on('change',
            function () {
                $('#BranchID').find("option[value\!='']").remove();
                if ($(this).val() !== '')

                    $.post('@Url.Action("GetBranchByBank")',
                        { bankID: $(this).val() },
                        function (data) {
                            $.each(data,
                                function (key, value) {
                                    $('#BranchID').append($('<option></option>').val(value.ID).html(value.Text));
                                });
                        });
            })
    });
    $('#PaymentMethod').on('change',
        function () {
            if ($('#PaymentMethod').val() == '' || $('#PaymentMethod').val() == '1') {
                $('#transfer').hide()
                $('#BankAccount').val('')
                $('#BankID').val('')
                $('#BranchID').val('')
                $('#BankAccountName').val('')
            } else {
                $('#transfer').show()
            }
        })
    $("#MainForm").validate()
    function inItUploadAjaxForm(successFunction) {
        window.addEventListener("submit", function (e) {
            var form = e.target;
            if (form.getAttribute("enctype") === "multipart/form-data") {
                if (form.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(form.method, form.action);
                    xhr.onreadystatechange = function (result) {
                        if (xhr.readyState == 4 && xhr.status == 200) {
                            if (successFunction)
                                successFunction(xhr.responseText);
                        }
                    };
                    xhr.send(new FormData(form));


                }
            }
        }, true);
    }

    function beginSubmit() {

        var option = $('#ApproveID').find("option[value\!='']").length
        if (option != 0) {
            if ($('#ApproveID').val() != '') {
                $('#errorApproveID').hide()
                $('.chosen-select').chosen('destroy');
                var status = $("#MainForm").validate().form()
                $('.chosen-select').chosen();
                if (status) {
                    $('#submit').click()
                }


            } else {
                $('#errorApproveID').show()
                $('#ApproveID').focus()

            }

        } else {
            $('#errorApproveID').hide()
            $('.chosen-select').chosen('destroy');
            var status = $("#MainForm").validate().form()
            $('.chosen-select').chosen();
            if (status) {
                $('#submit').click()
            }

        }
    }

    inItUploadAjaxForm(PaymentRequestSuccess);

    function PaymentRequestSuccess(data) {
        var result = JSON.parse(data);
        OnSuccessAjax(result);
    }
    jQuery.extend(jQuery.validator.messages, {
        required: "Thông tin bắt buộc",

    });
</script>



