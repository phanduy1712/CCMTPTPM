@using System.Data
@using System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder
@using CTGroup.Common
@using CTGroup.BO.Data
@using CTGroup.BO.Web.Common
@using CTGroup.BO.Web.Models
@using CTGroup.Common.Helpers
@using PagedList.Mvc;
@model CTGroup.BO.Services.PagedSearchList<CTGroup.BO.Data.PaymentRequestDetail>
<div class="table-responsive">
    <div class="m-t-lg">
        <h5 class="m-t-lg">Tìm thấy @Model.TotalItemCount</h5>
    </div>
    @if (UserPermission.Has(Permission.PaymentRequest_ApproveDetail))
    {
        <button class="btn btn-success btnApprove" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('1')">Duyệt chi</button>
    }
    @*<button class="btn btn-success btnChangeStatus" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('2')">Chuyển trạng thái phiếu chi</button>*@
    <button class="btn btn-success" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('3')">Thiết lập ngày chi</button>
    <a class="btn btn-success" style="margin-top: 10px; margin-bottom: 10px" href="@Url.Action("DownloadFileWord",new { file = ViewBag.TextWord })">Xuất file Word</a>
    <label>Tổng số tiền: </label> <label id="totalAmountCheck"></label>
    <table class="table table-hover table-bordered table-striped" style="margin-bottom: 0px">
        <tr>
            <th style="text-align: center">
                <input type="checkbox" onclick="Checkall(this)" />
            </th>
            <th style="text-align: center">#</th>
            <th style="text-align: center">
                Mã phiếu
            </th>
            <th style="text-align: center">
                Mã phiếu thu/chi
            </th>
            <th>
                Loaị phiếu
            </th>
            <th>
                Số tiền
            </th>
            <th>
                Số tiền duyệt chi
            </th>
            <th>
                Loại TT
            </th>
            <th>
                Mô tả
            </th>
            <th>
                Trạng thái
            </th>


            <th>
                Ngày đề nghị TT
            </th>
            <th style="text-align: center">
                Ngày kế toán duyệt
            </th>
            <th>
                Ngày dự kiến chi
            </th>

            <th>
                Ngày chi
            </th>
            <th>
                Độ ưu tiên
            </th>
            <th>
                In phiếu
            </th>

        </tr>
        @{ int index = Model.PageSize * (Model.PageNumber - 1) + 1; }
        @foreach (var item in Model)
        {
            <tr>

                <td style="text-align: center">
                    <input type="checkbox" class="cbox" id-value="@item.ID" />
                </td>

                <td style="text-align: center">
                    @(index++)
                </td>
                <td style="text-align: center">
                    @*@if (UserPermission.Has(Permission.ID_Edit)))
                        {**@

                    @{
                        var encryptedId = SecurityHelper.Encrypt(item.ID.ToString());
                        <a href="@Url.Action("EditDetail", new {id = encryptedId})">@item.PaymentRequest.ID</a>

                    }

                    @*@Ajax.ActionLink(item.Name, "CreateEdit", new { Id = item.Id }, new AjaxCommonOption() { OnSuccess = "OpenModal" })*@ @*Popup*@
                    @*}
                        else
                        {
                        @("KH" + item.ID)
                        }*@
                </td>
                <td style="text-align: center">
                    @item.Code
                </td>
                <td>
                    @item.Type.GetString()
                </td>
                <td>
                    @item.Amount.MoneyToString()
                </td>
                <td>
                    <input type="text" value="@item.Amount" class="form-control Amount" style="width: 120px" id-value="@item.ID" />
                    @*@item.Amount.MoneyToString()*@
                </td>
                <td>
                    @item.PaymentMethod.GetString()
                </td>
                <td>
                    @item.Description
                </td>
                <td>
                    @{
                        var labelStatus = "";
                        var classNameStatus = "";
                        var label = "";
                        var className = "";
                    }

                    @if (item.Status == PaymentRequestDetailStatus.DaDuyet)
                    {


                        if (item.Status == PaymentRequestDetailStatus.DaDuyet)
                        {
                            labelStatus = "Đã duyệt";
                            classNameStatus = "btn-success";
                        }
                        else if (item.Status == PaymentRequestDetailStatus.ChoDuyet)
                        {
                            labelStatus = "Chờ duyệt";
                            classNameStatus = "btn-info";
                        }


                        <div class="btn-group">
                            <button data-toggle="dropdown" class="btn @classNameStatus dropdown-toggle">@labelStatus <span class="caret"></span></button>
                            <ul class="dropdown-menu">
                                @if (item.Status != PaymentRequestDetailStatus.DaDuyet)
                                {
                                    <li><a onclick="UpdateStatus(@item.ID, @((int) PaymentRequestDetailStatus.DaDuyet))">Đã duyệt</a></li>
                                }
                                @if (item.Status != PaymentRequestDetailStatus.ChoDuyet)
                                {
                                    <li><a onclick="UpdateStatus(@item.ID, @((int) PaymentRequestDetailStatus.ChoDuyet))">Chờ duyệt</a></li>
                                }

                            </ul>
                        </div>

                    }
                    else
                    {

                        string statusColor = "";
                        if (item.Status == PaymentRequestDetailStatus.DaDuyet)
                        {

                            statusColor = "green";
                        }
                        else if (item.Status == PaymentRequestDetailStatus.ChoDuyet)
                        {

                            statusColor = "#cece00";
                        }
                        <label style="color: @statusColor">

                            @item.Status.GetString()
                        </label>

                    }

                </td>


                <td>
                    @(item.PaymentRequest.DatePaid != null ? item.PaymentRequest.DatePaid.Value.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @(item.PaymentRequest.TimeAccApprove != null ? item.PaymentRequest.TimeAccApprove.Value.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @(item.DaySpending != null ? item.DaySpending.Value.ToString("dd/MM/yyyy") : "")
                </td>

                <td>
                    @(item.TimePaid != null ? item.TimePaid.Value.ToString("dd/MM/yyyy") : "")
                </td>
                <td>

                    @if (item.Priority == PaymentRequestDetailPriority.BinhThuong)
                    {
                        label = "Bình thường";
                        className = "btn-warning";
                    }
                    else if (item.Priority == PaymentRequestDetailPriority.Cao)
                    {
                        label = "Cao";
                        className = "btn-danger";
                    }
                    else if (item.Priority == PaymentRequestDetailPriority.Thap)
                    {
                        label = "Thấp";
                        className = "btn-success";
                    }

                    <div class="btn-group">
                        <button data-toggle="dropdown" class="btn @className dropdown-toggle">@label <span class="caret"></span></button>
                        <ul class="dropdown-menu">
                            @if (item.Priority != PaymentRequestDetailPriority.BinhThuong)
                            {
                                <li><a onclick="UpdateEmpStatus(@item.ID, @((int) PaymentRequestDetailPriority.BinhThuong))">Bình thường</a></li>
                            }
                            @if (item.Priority != PaymentRequestDetailPriority.Cao)
                            {
                                <li><a onclick="UpdateEmpStatus(@item.ID, @((int) PaymentRequestDetailPriority.Cao))">Cao</a></li>
                            }
                            @if (item.Priority != PaymentRequestDetailPriority.Thap)
                            {
                                <li><a onclick="UpdateEmpStatus(@item.ID, @((int) PaymentRequestDetailPriority.Thap))">Thấp</a></li>
                            }

                        </ul>
                    </div>
                </td>
                <td class="center">

                    <a class="btn btn-primary " target="_Blank" href="@Url.Action("Print",new {id = encryptedId})"><i class="fa fa-print "></i></a>

                    @*@Html.ActionLink("In phiếu", "Print", new { id = encryptedId }, new { @class = "btn btn-primary ", @target = "_Blank" })*@

                </td>


            </tr>
                        }
    </table>
    @if (UserPermission.Has(Permission.PaymentRequest_ApproveDetail))
    {
        <button class="btn btn-success btnApprove" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('1')">Duyệt chi</button>
    }
    @*<button class="btn btn-success btnChangeStatus" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('2')">Chuyển trạng thái phiếu chi</button>*@
    <button class="btn btn-success" style="margin-top: 10px; margin-bottom: 10px" onclick="btnListClick('3')">Thiết lập ngày chi</button>
    <br />
    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
    @Html.PagedListPager(Model, page =>
{
    Model.SearchModel.PageIndex = page;
    return Url.Action("ListDetail2", Model.SearchModel);
},
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxCommonOption() { HttpMethod = "POST", UpdateTargetId = "content" }))
</div>
<div class="modal inmodal fade" id="myModal5" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-m">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Thiết lập ngày chi</h4>
                <small class="font-bold"></small>
            </div>
            <div id="modalBody">

            </div>

        </div>
    </div>
</div>
<script>
    
    //var nf = new Intl.NumberFormat("vi-VN", {
    //    style: "currency",
    //    currency: "VND",
        
    //});

    $('.Amount').autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });

    @*function updateAmount(e) {
        OnBeginAjax();
        $.post('@Url.Action("UpdateAmountDetail")', { amount: $(e).val(), id: $(e).attr('id-value') }, function(result) {
            RefreshList(result)
            })
            .fail(function () {
            OnCompleteAjax()
            OnFailure()
        })
    }*@

    
    function UpdateStatus(id, status) {
        OnBeginAjax();
        $.post('@Url.Action("UpdateStatusDetail")', { id: id, status: status }, function (result) {
            RefreshList(result)
        }).fail(function () {
            OnCompleteAjax()
            OnFailure()
        });

    }

    function OpenModal(html) {
        $('#modalBody').html(html);
        $('#myModal5').modal('show');
    }

    $(function checkStatus() {
        if ($('#Status').val() == '@((int)PaymentRequestDetailStatus.ChoDuyet)') {
            $('.btnApprove').show()
            $('.btnChangeStatus').hide()
        } else {
            $('.btnApprove').hide()
            $('.btnChangeStatus').show()
        }


    })
    

    function btnListClick(e) {                    //1: Duyệt, 2: Chuyển trạng thái, 3:Thiết lập ngày chi
        var checkedCount = $('.cbox:checked').length

        if (checkedCount == 0) {
            swal({
                title: "Không có phiếu nào được chọn",
                type: "error"
            })
        } else {

            var listIdDetail = []
            var listAmount = []
            $.each($('.cbox'), function (i, value) {

                if (value.checked) {

                    listIdDetail.push($(value).attr('id-value'))
                    var amount = $('.Amount').eq(i).val().replace(/\./g, "")
                    listAmount.push(amount)

                }

            })
            var model = { Id: listIdDetail, Amount: listAmount };


            if (e == '1' || e == '2') //Duyệt hoặc chuyển trạng thái
            {
                OnBeginAjax();
                $.post('@Url.Action("ChangeStatusPaymentRequestDetail")', { jsonModel: JSON.stringify(model), flag: e }, function (result) {
                    RefreshList(result)
                }).fail(function () {
                    OnCompleteAjax()
                    OnFailure()
                })
            } else if (e == '3') {
                $.post('@Url.Action("ModalAddDaySpending")', { jsonIdDetail: JSON.stringify(listIdDetail) }, function (result) {
                    OpenModal(result)
                }).fail(function () {
                    OnCompleteAjax()
                    OnFailure()
                })

            }

        }
    }

    $('.Amount').on('change',function() {
        updateTotalAmountCheckBox()
    })

    $('.cbox').on('change',function() {
        updateTotalAmountCheckBox()
    })

    function updateTotalAmountCheckBox() {
        var totalAmount = 0;
        $.each($('.cbox'), function (i, value) {
            
            if (value.checked)
            {
                var amount = $('.Amount').eq(i).val().replace(/\./g, "")
                totalAmount += parseInt(amount);

            }

        })
        $('#totalAmountCheck').text(totalAmount)

    }

    function Checkall(e) {
        if ($(e).is(':checked')) {
            
            $('.cbox:not(.disabled)').prop('checked', 'checked')
            updateTotalAmountCheckBox()
        } else {
            $('.cbox').removeAttr('checked')
            updateTotalAmountCheckBox()
        }
    }
    
    
    function UpdateEmpStatus(id, status) {
        OnBeginAjax();
        $.post('@Url.Action("UpdatePriorityStatus")', { id: id, status: status }, function (result) {
            RefreshList(result)
        }).fail(function () {
            OnCompleteAjax()
            OnFailure()
        });

    }

    function RefreshList(result) {
        OnSuccessAjax(result);

        $('#btnSearch').click();
    }
</script>

