@model CTGroup.BO.Data.PaymentRequest
@using System.Activities.Expressions
@using CTGroup.BO.Data
@using CTGroup.BO.Web.Common
@{
    ViewBag.Title = "Đề nghị thanh toán";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/plugin/iCheck/custom.css" rel="stylesheet" />
<link href="~/Content/chosen.css" rel="stylesheet" />
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Quản lý thanh toán", "Index")
            </li>
            <li class="active">
                <strong>Chỉnh sửa</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    @using (Ajax.BeginForm("Edit", "PaymentRequest", null, new AjaxCommonOption() { HttpMethod = "POST" }, new { role = "form", id = "MainForm", enctype = "multipart/form-data" }))
                    {
                        
                        @Html.HiddenFor(x => x.ID)

                        <div class="row">
                            <div class="col-lg-12">

                                @if ((UserPermission.Has(Permission.PaymentRequest_Edit) || ViewBag.Permission == 1) && Model.Status == PaymentRequestStatus.ChoDuyet) /*Permission = 1: người tạo*/
                                {
                                    <a class="btn btn-primary" onclick="btnSubmit('1')">Lưu</a>
                                }
                                @if (Model.Status == PaymentRequestStatus.ChoDuyet && UserPermission.Has(Permission.PaymentRequest_CompleteFile))
                                {
                                    <a class="btn btn-success" onclick="btnSubmit('2')">KTT duyệt</a>
                                }
                                @if (UserPermission.Has(Permission.PaymentRequest_CancelPaymentRequest) && Model.Status == PaymentRequestStatus.ChoDuyet)
                                {
                                <a class="btn btn-danger" onclick="btnSubmit('3')">Hủy phiếu</a>
                                }
                                @if (UserPermission.Has(Permission.PaymentRequest_EditFile) || Model.Status == PaymentRequestStatus.DaThanhToan || Model.Status == PaymentRequestStatus.HoanTat)
                                {
                                    <a class="btn btn-primary" onclick="btnSubmit('4')">Lưu hồ sơ</a>
                                }
                                @Html.ActionLink("Hủy", "Index", null, htmlAttributes: new { @class = "btn btn-default", role = "button" })
                            </div>
                        </div>

                        <div class="form-horizontal">
                            <div class="col-lg-12">
                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Cty thành viên</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.FromCompany, null, new { @class = "chosen-select" })
                                                @Html.ValidationMessageFor(model => model.FromCompany, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Loại</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.Type, null, new { @class = "form-control", @disabled = "" })
                                                @Html.HiddenFor(x => x.Type)
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Nội dung</label>
                                            <div class="col-md-8">
                                                @Html.TextAreaFor(x => x.Description, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Ngày đề nghị TT</label>
                                            <div class="col-md-8">
                                                <div class="input-group date">
                                                    <input type="text" value="@Model.DatePaid" name="DatePaid" id="DatePaid" class="form-control" data_val="false">
                                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.DatePaid, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-12">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Khách hàng</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.CustomerID, null,"--------", new { @class = "chosen-select " })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Khách hàng mới</label>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control " })
                                            </div>
                                        </div>
                                    </div>
                                    

                                </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Hợp đồng</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.ContractID, null, "-----", new { @class = "chosen-select" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">File chứng từ</label>
                                        <div class="col-md-8">
                                            <input type="file" class="form-control" multiple="multiple" id="fileAttach" name="fileAttach"/>
                                            @Html.Action("ListFileDownload", new {PaymentRequestId = @Model.ID})
                                        </div>
                                    </div>
                                </div>
                                
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">NV xem xét</label>
                                        <div class="col-md-8">
                                            @Html.DropDownList("Users", null, new { @class = "form-control select2", multiple = "multiple" , id ="Users"})
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Người đề nghị</label>
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(x => x.FromUser, null, new {@class = "chosen-select", @disabled = ""})
                                            @Html.HiddenFor(x => x.FromUser)
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                                @*@if (Model.Type == PaymentRequestType.PhieuDeNghiThuKH)
                                {
                                    <div class="col-md-12">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Dự án</label>
                                                <div class="col-md-8">
                                                    @Html.DropDownList("Project", null, "-----", new { @class = "form-control", @id = "Project" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="col-md-4 control-label">Căn hộ</label>
                                                <div class="col-md-8">
                                                    @Html.DropDownListFor(x => x.ProductID, null, "-----", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }*@





                                <div class="col-md-12">
                                    @{
                                        string colorStatus = "";
                                        if (Model.Status == PaymentRequestStatus.ChoDuyet)
                                        {
                                            colorStatus = "#cece00";
                                        }
                                        else if (Model.Status == PaymentRequestStatus.Huy)
                                        {
                                            colorStatus = "red";
                                        }
                                        else if (Model.Status == PaymentRequestStatus.HoanTat)
                                        {
                                            colorStatus = "green";
                                        }
                                        else if (Model.Status == PaymentRequestStatus.DaThanhToan)
                                        {
                                            colorStatus = "blue";
                                        }
                                    }

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Trạng thái</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(x => x.Status, null, new { @style = "color: " + colorStatus + "", @class = "form-control", @disabled = "" })
                                                @Html.HiddenFor(x => x.Status)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="col-md-4 control-label">Tổng tiền</label>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(x => x.Amount, new {@class = "form-control"})
                                            </div>
                                        </div>
                                    </div>
                                    
                                </div>

                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Đã TT</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(x => x.AmountPaid, new { @class = "form-control", @disabled = "" })
                                            @Html.HiddenFor(x => x.AmountPaid)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Cần TT</label>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(x => x.AmountDue, new {@class = "form-control ", @disabled = ""})
                                            @Html.HiddenFor(x => x.AmountDue)
                                        </div>
                                    </div>
                                </div>
                            </div>

                                <div class="col-md-12">
                                    <hr />
                                </div>

                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="col-sm-2 control-label">Hồ sơ đính kèm</label>

                                        <div class="col-sm-10">
                                            <div class="col-sm-9" style="margin-right: -45px">
                                                <label class="checkbox-inline i-checks"> @Html.CheckBoxFor(x => x.HaveContract) Hợp đồng </label>
                                                <label class="checkbox-inline i-checks"> @Html.CheckBoxFor(x => x.HaveBill) Hóa đơn </label>
                                                <label class="checkbox-inline i-checks"> @Html.CheckBoxFor(x => x.HaveBBNT) Biên bản nghiệm thu </label>
                                                <label class="checkbox-inline i-checks"> @Html.CheckBoxFor(x => x.HaveNXK) Phiếu nhập xuất kho </label>
                                                @if (!string.IsNullOrEmpty(@Model.HaveNote))
                                                {
                                                    <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" id="HaveNoteCheck" checked=""> Khác </label>
                                                }
                                                else
                                                {
                                                    <label class="checkbox-inline i-checks"> <input type="checkbox" value="true" id="HaveNoteCheck"> Khác </label>
                                                }
                                            </div>
                                            <div class="col-sm-3">
                                                @Html.TextBoxFor(x => x.HaveNote, new { @class = "form-control", @style = "width: 220px", @placeholder = "Nhập khác" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>

                        </div>

                            <div class="row">
                                <div class="col-lg-12">
                                    <button type="submit" hidden="" id="btnSave"></button>
                                    <input type="hidden" name="flag" id="flag" />
                                    @if ( (UserPermission.Has(Permission.PaymentRequest_Edit) || ViewBag.Permission == 1) && Model.Status == PaymentRequestStatus.ChoDuyet) /*Permission = 1: người tạo*/
                                    {
                                        <a class="btn btn-primary" onclick="btnSubmit('1')">Lưu</a>
                                    }
                                    @if (Model.Status == PaymentRequestStatus.ChoDuyet && UserPermission.Has(Permission.PaymentRequest_CompleteFile))
                                    {
                                        <a class="btn btn-success" onclick="btnSubmit('2')">KTT duyệt</a>
                                    }
                                    @if ( UserPermission.Has(Permission.PaymentRequest_CancelPaymentRequest) && Model.Status == PaymentRequestStatus.ChoDuyet)
                                    {
                                        <a class="btn btn-danger" onclick="btnSubmit('3')">Hủy phiếu</a>
                                    }
                                    @if (UserPermission.Has(Permission.PaymentRequest_EditFile) || Model.Status == PaymentRequestStatus.DaThanhToan || Model.Status == PaymentRequestStatus.HoanTat)
                                    {
                                        <a class="btn btn-primary" onclick="btnSubmit('4')">Lưu hồ sơ</a>
                                    }
                                    @Html.ActionLink("Hủy", "Index", null, htmlAttributes: new { @class = "btn btn-default", role = "button" })
                                </div>
                            </div>


                    }
                    @*@if (UserPermission.Has(Permission.PaymentRequest_CreateEditPaymenRequestDetail) || ViewBag.Permission == 1)
                    {
                        <div class="row" style="margin-top: 10px;">
                            <div class="col-lg-12">
                                <a class="btn btn-primary" style="margin-top: 10px" href="@Url.Action("CreateDetail",new { PaymentRequestId = Model.ID})">Thêm lệnh thu/chi</a>
                            </div>
                        </div>
                    }*@
                   
                    <input hidden="" id="DTT" value="@PaymentRequestStatus.DaThanhToan"/>
                    <input hidden="" id="HT" value="@PaymentRequestStatus.HoanTat"/>
                    <div id="content" class="loading">
                        @Html.Action("ListDetail", "PaymentRequest", new { ID = @Model.ID })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
<script src="~/Scripts/chosen.jquery.js"></script>
<script>
    function btnSubmit(e) {
        $('#flag').val(e)
        var amount = parseFloat($('#Amount').autoNumeric('get'));
        if (amount > 20000000 && $('#flag').val() == 2 && (($('#Type').val() == '@((int)PaymentRequestType.PhieuDeNghiThanhToan)') || ($('#Type').val() == '@((int)PaymentRequestType.PhieuTamUng)'))) {
          
                swal({
                        title: "Bạn có muốn duyệt?",
                        text: "Lệnh thanh toán lớn hơn 20 triệu!",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#1a7bb9",
                        confirmButtonText: "Duyệt",
                        cancelButtonText: "Hủy",
                        closeOnConfirm: false
                    },
                    function() {
                        $('#btnSave').click();
                    });
           
        } else {
            $('#btnSave').click();
        }
        
    }

    $('#HaveNoteCheck').on('ifChecked', function () {
        $('#HaveNote').removeAttr('disabled')
    })

    $('#HaveNoteCheck').on('ifUnchecked', function () {

        $('#HaveNote').prop('disabled', 'disabled')

    })
    $().ready(function () {
        
        
        if ($('#HaveNoteCheck').prop('checked')) {
            $('#HaveNote').removeAttr('disabled')
        } else {
            $('#HaveNote').prop('disabled', 'disabled')
        }
        //if ($('#Status').val() == $('#DTT').val() || $('#Status').val() == $('#HT').val()) {
        //    $('#FromCompany').prop('disabled', 'disabled')
        //    $('#Description').prop('disabled', 'disabled')
        //    $('#DatePaid').prop('disabled', 'disabled')
        //    $('#CustomerID').prop('disabled', 'disabled')
        //    $('#CustomerName').prop('disabled', 'disabled')
        //    $('#ContractID').prop('disabled', 'disabled')
        //    $('#fileAttach').prop('disabled', 'disabled')
        //    $('#Users').prop('disabled', 'disabled')
        //    $('#Amount').prop('disabled', 'disabled')
        //}
    
        function inItUploadAjaxForm(successFunction) {
            window.addEventListener("submit", function (e) {

                var form = e.target;
                if (form.getAttribute("enctype") === "multipart/form-data") {
                    if (form.dataset.ajax) {
                        e.preventDefault();
                        e.stopImmediatePropagation();
                        var xhr = new XMLHttpRequest();
                        xhr.open(form.method, form.action);
                        xhr.onreadystatechange = function (result) {
                            if (xhr.readyState == 4 && xhr.status == 200) {
                                if (successFunction)
                                    successFunction(xhr.responseText);
                            }
                        };
                        xhr.send(new FormData(form));
                    }
                }
            }, true);
        }

        inItUploadAjaxForm(Success);


        function Success(data) {
            var result = JSON.parse(data);
            OnSuccessAjax(result);

        }

        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
        });

        $('.input-group.date').datetimepicker({
            locale: 'vi',
            format: 'DD/MM/YYYY',
            defaultDate: null,
            viewMode: 'years'
        });

       
        $('#Amount').autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });
        $('#AmountPaid').autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });
        $('#AmountDue').autoNumeric('init', { aPad: false, aSep: '.', aDec: ',', vMin: 0.00, vMax: 99999999999999999.00 });
        $(function () {
            $('.chosen-select').chosen();
        });
        $('#Project').on('change',
            function () {
                $('#ProductID').find("option[value\!='']").remove();
                if ($(this).val() !== '')

                    $.post('@Url.Action("GetProductByProjectId")',
                        { projectId: $(this).val() },
                        function (data) {
                            $.each(data,
                                function (key, value) {
                                    $('#ProductID').append($('<option></option>').val(value.ID).html(value.Text));
                                });
                        });
            })
    });

</script>
<script>
    function Check(object) {
        var item = $(object);
        $("input[group='" + item.attr("group") + "']").each(function (i) {
            if (this.name == item.attr("name")) {
                this.checked = true;
            } else {
                this.checked = false;
            }
        });
    }

    function ManagerSuccess(result) {
        OnSuccessAjax(result);
        $("#frmSearchRanking").submit();
    }

    function Validate() {
        var flag = true;
        //$("input[group='SaleIndex']").each(function (i) {
        //    if ($(this).val() == "") {
        //        flag = false;
        //        alert("Vui lòng nhập đầy đủ chỉ tiêu cho sale.");
        //        return false;
        //    }

        //});
        return flag;
    }

    $(function () {
        $("#btnPrint")
            .click(function () {
                @*$.post('@Url.Action("Print", "Ranking")',

                            $("#frmSearchRanking").serialize()
                ,
                function (data) {
               alert(data);
                });*@
                var rankingID = $("#id").val();
                var departmentID = $("#DepartmentId").val();
                var tmpID = $("#tmpID").val();

                //location.href = "/Ranking/Print?rankingID="+rankingID+"&departmentID="+departmentID+"&tmpID="+tmpID;
                window.open("/PaymentRequest/Print?id=" +
                    rankingID);
            });

        $("#btnExport")
            .click(function () {
                var rankingID = $("#rankingID").val();
                var departmentID = $("#DepartmentId").val();
                var tmpID = $("#tmpID").val();

                window.open("/Ranking/Export?rankingID=" +
                    rankingID +
                    "&departmentID=" +
                    departmentID +
                    "&tmpID=" +
                    tmpID);
            });
    });
</script>

